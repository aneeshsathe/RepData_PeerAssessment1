in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),2, impute_val(r,a) )
class(1:3)
class(which(is.na(r$steps)))
impute_val=function(in_row,int_means){
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
lapply(which(is.na(r$steps)), impute_val,)
impute_val=function(in_row,int_means){
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
lapply(c(which(is.na(r$steps))), impute_val,)
impute_val=function(in_row,int_means){
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
lapply(c(which(is.na(r$steps))), impute_val)
impute_val=function(in_row,int_means){
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
lapply(c(which(is.na(r$steps))), impute_val(r,a))
impute_val=function(in_row,int_means){
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
sapply(c(which(is.na(r$steps))), impute_val)
impute_val=function(in_row,int_means){
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(c(which(is.na(r$steps))),1, impute_val)
impute_val=function(in_row,int_means){
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),1, impute_val)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),1, impute_val(x,y,z),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),2, impute_val(x,y,z),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),2, impute_val(x,r,a),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(c(which(is.na(r$steps))),2, impute_val(x,r,a),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),1, impute_val(x,r,a),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),2, impute_val(x,r,a),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),2, function(x) impute_val(x,y,z),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(which(is.na(r$steps)),1, function(x) impute_val(x,y,z),y=r,z=a)
matrix(which(is.na(r$steps))
)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(matrix(which(is.na(r$steps))),1, function(x) impute_val(x,y,z),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(matrix(which(is.na(r$steps))),1, function(x,y,z) impute_val(x,y,z),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
sapply(matrix(which(is.na(r$steps))),1, function(x,y,z) impute_val(x,y,z),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
apply(matrix(which(is.na(r$steps))),1, function(x,y,z) impute_val(x,y,z),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
d=apply(matrix(which(is.na(r$steps))),1, function(x,y,z) impute_val(x,y,z),y=r,z=a)
d
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
d=apply(list(which(is.na(r$steps))),1, function(x,y,z) impute_val(x,y,z),y=r,z=a)
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
d=apply(matrix(which(is.na(r$steps))),2, function(x,y,z) impute_val(x,y,z),y=r,z=a)
d
impute_val=function(x,in_row2,int_means){
in_row=in_row2[x,]
if (is.na(in_row$steps))
in_row$steps=int_means$mean[which(int_means$factor==in_row$interval)]
return(in_row)
}
d=apply(matrix(which(is.na(in_data$steps))),2, function(x,y,z) impute_val(x,y,z),y=in_data,z=a)
head(in_data)
head(d)
d
d[20,]
size(d)
dim(d)
class(d)
for (i in which(is.na(in_data$steps))){
print(i)
}
for (i in 1){
if(is.na(in_data$steps[i])){
in_data[i,]
}
}
for (i in 1){
if(is.na(in_data$steps[i])){
print(in_data[i,])
}
}
imp_data=in_data
for (i in which(is.na(in_data$steps))){
if(is.na(in_data$steps[i])){
imp_data[i,]=a$mean[which(a$factor==in_data$interval[i])]
}
}
head(imp_data)
imp_data=in_data
for (i in which(is.na(in_data$steps))){
if(is.na(in_data$steps[i])){
imp_data$steps[i]=a$mean[which(a$factor==in_data$interval[i])]
}
}
head(imp_data)
which(is.na(imp_data$steps))
i=is.na(in_data$steps[which(is.na(in_data$steps))])
# imp_data$steps[i]
print(i)
sum(is.na(in_data$steps))
i=which(is.na(in_data$steps[which(is.na(in_data$steps))]))
# imp_data$steps[i]
print(i)
sum(is.na(in_data$steps))
imp_data=in_data
for (i in which(is.na(in_data$steps))){
if(is.na(in_data$steps[i])){
imp_data$steps[i]=a$mean[which(a$factor==in_data$interval[i])]
}
}
ggplot(data=imp_data)+geom_histogram(aes(x=steps))
sum(is.na(in_data$steps))
imp_data=in_data
for (i in which(is.na(in_data$steps))){
if(is.na(in_data$steps[i])){
imp_data$steps[i]=a$mean[which(a$factor==in_data$interval[i])]
}
}
ggplot(data=imp_data)+geom_histogram(aes(x=steps))
steps_per_day=aggregate(list(steps = imp_data$steps),
list(day = cut(imp_data$date, "1 day")),
sum)
mean_steps_per_day_imp=mean(steps_per_day$steps)
med_steps_per_day_imp=median(steps_per_day$steps)
ggplot(data=imp_data)+geom_histogram(aes(x=steps))
steps_per_day=aggregate(list(steps = imp_data$steps),
list(day = cut(imp_data$date, "1 day")),
sum)
mean_steps_per_day_imp=mean(steps_per_day$steps)
med_steps_per_day_imp=median(steps_per_day$steps)
ggplot(data=imp_data)+geom_histogram(aes(x=steps))
steps_per_day=aggregate(list(steps = imp_data$steps),
list(day = cut(imp_data$date, "1 day")),
sum)
mean_steps_per_day_imp=mean(steps_per_day$steps)
med_steps_per_day_imp=median(steps_per_day$steps)
mean_steps_per_day_imp
med_steps_per_day_imp
sum(is.na(in_data$steps))
imp_data=in_data
for (i in which(is.na(in_data$steps))){
if(is.na(in_data$steps[i])){
imp_data$steps[i]=round(a$mean[which(a$factor==in_data$interval[i])])
}
}
ggplot(data=imp_data)+geom_histogram(aes(x=steps))
steps_per_day=aggregate(list(steps = imp_data$steps),
list(day = cut(imp_data$date, "1 day")),
sum)
mean_steps_per_day_imp=mean(steps_per_day$steps)
med_steps_per_day_imp=median(steps_per_day$steps)
mean_steps_per_day_imp
med_steps_per_day_imp
?weekdays
weekdays(imp_data$date[1])
imp_data$daytype <- as.factor(ifelse(weekday( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
imp_data=in_data
for (i in which(is.na(in_data$steps))){
if(is.na(in_data$steps[i])){
imp_data$steps[i]=round(a$mean[which(a$factor==in_data$interval[i])])
}
}
head(imp_data)
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
levels(imp_data$daytype)
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
ggplot(a,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+scale_colour_gradient2(mid="red")+facet_grid(daytype~.)
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
b=data.frame(imp_data[,list(mean=mean(steps,na.rm = T)),by=factor(in_data$interval)])
b$factor=as.numeric(as.character(b$factor))
ggplot(a,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+scale_colour_gradient2(mid="red")+facet_grid(daytype~.)
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
b=data.frame(imp_data[,list(mean=mean(steps,na.rm = T)),by=factor(in_data$interval)])
b$factor=as.numeric(as.character(b$factor))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+scale_colour_gradient2(mid="red")+facet_grid(daytype~.)
head(b)
?data.table
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
b=data.frame(imp_data[,list(mean=mean(steps,na.rm = T)),by=c(factor(imp_data$interval),factor(imp_data$daytype))])
b$factor=as.numeric(as.character(b$factor))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+scale_colour_gradient2(mid="red")+facet_grid(daytype~.)
head(b)
X = data.table(c("b","c"),foo=c(4,2))
X
DT = data.table(x=rep(c("a","b","c"),each=3), y=c(1,3,6), v=1:9)
DT
DT[,list(MySum=sum(v),
MyMin=min(v),
MyMax=max(v)),
by=.(x,y%%2)]
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
b=data.frame(imp_data[,list(mean=mean(steps,na.rm = T)),by=.(factor(imp_data$interval),factor(imp_data$daytype))])
b$factor=as.numeric(as.character(b$factor))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+scale_colour_gradient2(mid="red")+facet_grid(daytype~.)
head(b)
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
b=data.frame(imp_data[,list(mean=mean(steps,na.rm = T)),by=.(factor(imp_data$interval),factor(imp_data$daytype))])
b$factor=as.numeric(as.character(b$factor))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)
imp_data$daytype <- as.factor(ifelse(weekdays( imp_data$date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(imp_data)
b=data.frame(imp_data[,list(mean=mean(steps,na.rm = T)),by=.(factor(imp_data$interval),daytype(imp_data$daytype))])
b$factor=as.numeric(as.character(b$factor))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+scale_colour_gradient2(mid="red")+facet_grid(daytype~.)
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_y_continuous(name="Weight (Kg)")+
scale_y_continuous(name="Weight (Kg)")
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_y_continuous(name="Number of Steps")+
scale_y_continuous(name="Interval")
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=90, vjust=0.5, size=16))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=90, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=90, vjust=0.5, size=16))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype",size=16)+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16))
?theme
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(angle=0, vjust=0.5, size=18))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_fill_discrete(name="Experimental\nCondition")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_fill_manual(name="Experimental\nCondition")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_fill_continuous(name="Experimental\nCondition")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"))
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_shape_discrete(name  ="Payer")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"))
head(b)
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_shape_discrete(name  ="Payer")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"),
legend.position="none")
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_shape_discrete(name  ="Payer")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"),
strip.text.y = element_text(size=12, face="bold"),
legend.position="none")
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean))+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_shape_discrete(name  ="Payer")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"),
strip.text.y = element_text(size=14, face="bold"),
legend.position="none")
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean),size=3)+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_shape_discrete(name  ="Payer")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"),
strip.text.y = element_text(size=14, face="bold"),
legend.position="none")
ggplot(b,aes(x=factor,y=mean))+geom_line(aes(colour=mean),size=2)+
scale_colour_gradient2(mid="red")+facet_grid(factor.1~.)+
ggtitle("Average steps over intervals divided by daytype")+
scale_shape_discrete(name  ="Payer")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"),
strip.text.y = element_text(size=14, face="bold"),
legend.position="none")
a=data.frame(in_data[,list(mean=mean(steps,na.rm = T)),by=factor(in_data$interval)])
a$factor=as.numeric(as.character(a$factor))
ggplot(a,aes(x=factor,y=mean))+geom_line(aes(colour=mean),size=3)+
scale_colour_gradient2(mid="red")+
ggtitle("Average steps over intervals divided by daytype")+
scale_shape_discrete(name  ="Payer")+
scale_y_continuous(name="Number of Steps")+
scale_x_continuous(name="Interval")+
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
axis.text.y  = element_text(angle=0, vjust=0.5, size=16),
plot.title = element_text(size=18,face="bold", colour="#990000"),
legend.position="none")
max_step_interval=a$factor[which.max(a$mean)]
rm(list = ls())
